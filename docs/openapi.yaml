openapi: 3.0.3
info:
  title: Kaede API
  version: 1.0.0
  description: |
    Kaede大学講義レビューシステムのAPI仕様書

    ## 認証方式
    JWT（JSON Web Token）認証を使用：
    - アクセストークン（短期間有効）
    - リフレッシュトークン（長期間有効）
    - Authorization: Bearer <token> ヘッダーで認証

    ## 機能
    - ユーザー管理
    - 講義情報管理
    - レビュー投稿・閲覧
    - お問い合わせ

servers:
  - url: http://localhost:8000
    description: 開発環境
  - url: https://kaede-sx6k.onrender.com
    description: 本番環境

paths:
  # Authentication API
  # 1. ユーザー登録・アカウント作成
  /api/v1/auth/register/:
    post:
      operationId: auth_register
      summary: ユーザー登録（仮登録）
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: 登録成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: バリデーションエラー
        '409':
          description: ユーザーが既に存在

  # 2. メール認証・アカウント有効化
  /api/v1/auth/verify-email/:
    post:
      operationId: auth_verify_email
      summary: メールアドレス認証
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerificationRequest'
      responses:
        '200':
          description: 認証成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailVerificationResponse'
        '400':
          description: バリデーションエラー
        '404':
          description: ユーザーが見つかりません
        '410':
          description: トークンが無効または期限切れ

  /api/v1/auth/resend-verification/:
    post:
      operationId: auth_resend_verification
      summary: 認証メール再送信
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
      responses:
        '200':
          description: 再送信成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendVerificationResponse'
        '400':
          description: バリデーションエラー
        '404':
          description: ユーザーが見つかりません
        '429':
          description: 送信回数制限

  # 3. ログイン・セッション開始
  /api/v1/auth/login/:
    post:
      operationId: auth_login
      summary: ユーザーログイン
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: バリデーションエラー
        '401':
          description: 認証失敗

  # 4. セッション管理・トークン更新
  /api/v1/auth/refresh/:
    post:
      operationId: auth_refresh
      summary: トークンリフレッシュ
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '400':
          description: バリデーションエラー
        '401':
          description: リフレッシュトークンが無効

  # 5. パスワード管理・セキュリティ機能
  /api/v1/auth/password/reset/:
    post:
      operationId: auth_password_reset
      summary: パスワードリセットリンク送信
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
      responses:
        '200':
          description: リセットリンク送信成功
        '400':
          description: バリデーションエラー
        '404':
          description: ユーザーが見つかりません

  /api/v1/auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm
      summary: パスワードリセット実行
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmRequest'
      responses:
        '200':
          description: パスワードリセット成功
        '400':
          description: バリデーションエラー
        '404':
          description: ユーザーが見つかりません

  /api/v1/auth/password/change/:
    post:
      operationId: auth_password_change
      summary: パスワード変更
      tags:
        - authentication
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
      responses:
        '200':
          description: パスワード変更成功
        '400':
          description: バリデーションエラー
        '401':
          description: 認証が必要

  # 6. ログアウト・セッション終了
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout
      summary: ユーザーログアウト
      tags:
        - authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ログアウト成功
        '401':
          description: 認証が必要

  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      summary: ユーザー詳細取得
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/v1/users/:
    post:
      operationId: users_create
      summary: ユーザー作成
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: バリデーションエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'

  /api/v1/users/{id}/:
    put:
      operationId: users_update
      summary: ユーザー更新
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: バリデーションエラー
        '401':
          description: 認証が必要
        '403':
          description: 権限なし
        '404':
          description: ユーザーが見つかりません
    delete:
      operationId: users_destroy
      summary: ユーザー削除
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
        '403':
          description: 権限なし
        '404':
          description: ユーザーが見つかりません

  # 統合候補取得API（講義名・教員名）
  /api/v1/lectures/suggestions/:
    post:
      operationId: lectures_suggest
      summary: 講義名・教員名候補取得（部分一致検索）
      tags:
        - lectures
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestionRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestionResponse'
        '400':
          description: バリデーションエラー


    post:
      operationId: lectures_search_detailed
      summary: 詳細検索（条件指定）
      tags:
        - lectures
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedSearchRequest'
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLectureList'
        '400':
          description: バリデーションエラー

  /api/v1/lectures/{id}/:
    get:
      operationId: lectures_retrieve
      summary: 講義詳細取得
      tags:
        - lectures
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 講義ID
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureDetail'
        '404':
          description: 講義が見つかりません
    put:
      operationId: lectures_update
      summary: 講義更新
      tags:
        - lectures
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LectureUpdate'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureDetail'
        '400':
          description: バリデーションエラー
        '401':
          description: 認証が必要
        '404':
          description: 講義が見つかりません
    delete:
      operationId: lectures_destroy
      summary: 講義削除
      tags:
        - lectures
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
        '403':
          description: 権限なし
        '404':
          description: 講義が見つかりません

  /api/v1/lectures/{lecture_id}/reviews/:
    get:
      operationId: lectures_reviews_list
      summary: 講義のレビュー一覧
      tags:
        - lectures
        - reviews
      parameters:
        - name: lecture_id
          in: path
          required: true
          schema:
            type: integer
          description: 講義ID
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          description: ページ番号
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
        '404':
          description: 講義が見つかりません

  # Reviews API (実装予定)
  /api/v1/reviews/:
    get:
      operationId: reviews_list
      summary: レビュー一覧取得
      tags:
        - reviews
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          description: ページ番号
        - name: lecture_id
          in: query
          schema:
            type: integer
          description: 講義IDでフィルタ
        - name: user_id
          in: query
          schema:
            type: integer
          description: ユーザーIDでフィルタ
        - name: attendance_year
          in: query
          schema:
            type: integer
          description: 履修年度でフィルタ
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
    post:
      operationId: reviews_create
      summary: レビュー作成
      tags:
        - reviews
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
      responses:
        '201':
          description: 作成成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: バリデーションエラー
        '401':
          description: 認証が必要

  /api/v1/reviews/{id}/:
    get:
      operationId: reviews_retrieve
      summary: レビュー詳細取得
      tags:
        - reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: レビューID
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: レビューが見つかりません
    put:
      operationId: reviews_update
      summary: レビュー更新
      tags:
        - reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdate'
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: バリデーションエラー
        '401':
          description: 認証が必要
        '403':
          description: 権限なし
        '404':
          description: レビューが見つかりません
    delete:
      operationId: reviews_destroy
      summary: レビュー削除
      tags:
        - reviews
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '204':
          description: 削除成功
        '401':
          description: 認証が必要
        '403':
          description: 権限なし
        '404':
          description: レビューが見つかりません

  # Contacts API (実装予定)
  /api/v1/contacts/:
    get:
      operationId: contacts_list
      summary: お問い合わせ一覧取得
      tags:
        - contacts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
          description: ページ番号
        - name: category
          in: query
          schema:
            type: string
          description: カテゴリでフィルタ
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContactList'
        '401':
          description: 認証が必要
        '403':
          description: 管理者権限が必要
    post:
      operationId: contacts_create
      summary: お問い合わせ送信
      tags:
        - contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactCreate'
      responses:
        '201':
          description: 送信成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          description: バリデーションエラー

  /api/v1/contacts/{id}/:
    get:
      operationId: contacts_retrieve
      summary: お問い合わせ詳細取得
      tags:
        - contacts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: お問い合わせID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: 認証が必要
        '403':
          description: 管理者権限が必要
        '404':
          description: お問い合わせが見つかりません



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT認証トークン（Authorization: Bearer <token>）

  schemas:
    # 1. Authentication schemas (認証関連)
    # 1-1. ユーザー登録・アカウント作成
    RegisterRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
          description: ユーザー名
        email:
          type: string
          format: email
          maxLength: 254
          description: メールアドレス
        password:
          type: string
          writeOnly: true
          minLength: 8
          description: パスワード
        university_name:
          type: string
          maxLength: 100
          description: 大学名
        category:
          type: string
          maxLength: 100
          description: 所属
        faculty:
          type: string
          maxLength: 100
          description: 学部
        department:
          type: string
          maxLength: 100
          description: 学科
        admission_year:
          type: integer
          description: 入学年度
      required:
        - username
        - email
        - password
        - university_name
        - category
        - faculty
        - department
        - admission_year

    RegisterResponse:
      type: object
      properties:
        message:
          type: string
          description: 登録完了メッセージ
        user_id:
          type: integer
          description: 作成されたユーザーID
        email_verified:
          type: boolean
          description: メール認証状態
      required:
        - message
        - user_id
        - email_verified

    # 1-2. メール認証・アカウント有効化
    EmailVerificationRequest:
      type: object
      properties:
        token:
          type: string
          description: メール認証トークン
        user_id:
          type: integer
          description: ユーザーID
      required:
        - token
        - user_id

    EmailVerificationResponse:
      type: object
      properties:
        message:
          type: string
          description: 認証完了メッセージ
        email_verified:
          type: boolean
          description: メール認証状態
      required:
        - message
        - email_verified

    ResendVerificationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          description: メールアドレス
      required:
        - email

    ResendVerificationResponse:
      type: object
      properties:
        message:
          type: string
          description: 再送信完了メッセージ
      required:
        - message

    # 1-3. ログイン・セッション開始
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          description: メールアドレス
        password:
          type: string
          minLength: 8
          description: パスワード
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        access:
          type: string
          description: アクセストークン
        refresh:
          type: string
          description: リフレッシュトークン
        user:
          $ref: '#/components/schemas/User'
      required:
        - access
        - refresh
        - user

    # 1-4. セッション管理・トークン更新
    RefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          description: リフレッシュトークン
      required:
        - refresh

    RefreshResponse:
      type: object
      properties:
        access:
          type: string
          description: 新しいアクセストークン
      required:
        - access

    # 1-5. パスワード管理・セキュリティ機能
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
          description: メールアドレス
      required:
        - email

    PasswordResetConfirmRequest:
      type: object
      properties:
        token:
          type: string
          description: パスワードリセットトークン
        email:
          type: string
          format: email
          maxLength: 254
          description: メールアドレス
        password:
          type: string
          minLength: 8
          description: 新しいパスワード
        password_confirm:
          type: string
          minLength: 8
          description: パスワード確認
      required:
        - token
        - email
        - password
        - password_confirm

    PasswordChangeRequest:
      type: object
      properties:
        old_password:
          type: string
          minLength: 8
          description: 現在のパスワード
        new_password:
          type: string
          minLength: 8
          description: 新しいパスワード
        new_password_confirm:
          type: string
          minLength: 8
          description: 新しいパスワード確認
      required:
        - old_password
        - new_password
        - new_password_confirm

    # 2. User schemas (ユーザー関連)
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          title: ID（主キー）
        username:
          type: string
          title: ユーザー名
          maxLength: 50
        email:
          type: string
          format: email
          title: メールアドレス
          maxLength: 254
        university_name:
          type: string
          title: 大学名
          maxLength: 100
        category:
          type: string
          title: 所属
          maxLength: 100
        faculty:
          type: string
          title: 学部
          maxLength: 100
        department:
          type: string
          title: 学科
          maxLength: 100
        admission_year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: 入学年度
        is_active:
          type: boolean
          title: アクティブ
        email_verified:
          type: boolean
          title: メール認証完了
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 作成時間
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: 更新時間
      required:
      - username
      - email
      - university_name
      - category
      - faculty
      - department
      - admission_year
      - is_active
      - email_verified
      - created_at
      - updated_at

    UserUpdate:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        university_name:
          type: string
          maxLength: 100
        category:
          type: string
          maxLength: 100
        faculty:
          type: string
          maxLength: 100
        department:
          type: string
          maxLength: 100
        admission_year:
          type: integer

    # 3. Lecture schemas (講義関連)
    Lecture:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: 講義ID
        lecture_name:
          type: string
          maxLength: 200
          description: 講義名
        teacher_name:
          type: string
          maxLength: 100
          description: 教員名
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - lecture_name
        - teacher_name

    LectureDetail:
      allOf:
        - $ref: '#/components/schemas/Lecture'
        - type: object
          properties:
            details:
              type: array
              items:
                $ref: '#/components/schemas/LectureDetailInfo'
              description: 講義詳細情報

    LectureDetailInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        lecture_code:
          type: string
          maxLength: 50
          description: 講義コード
        syllabus_url:
          type: string
          format: uri
          nullable: true
          description: シラバスURL
        location:
          type: string
          maxLength: 100
          nullable: true
          description: 開講場所
        faculty:
          type: string
          maxLength: 100
          nullable: true
          description: 開講学部
        category:
          type: string
          maxLength: 50
          nullable: true
          description: 科目区分
        grade:
          type: string
          maxLength: 20
          nullable: true
          description: 対象学年
        times:
          type: array
          items:
            $ref: '#/components/schemas/LectureTime'
          description: 時間割情報
      required:
        - lecture_code

    LectureTime:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        year:
          type: integer
          description: 開講年度
        term:
          type: string
          maxLength: 20
          description: 開講期（前期・後期など）
        day_of_week:
          type: string
          maxLength: 10
          description: 曜日
        time_period:
          type: string
          maxLength: 20
          description: 時限
      required:
        - year
        - term
        - day_of_week
        - time_period

    LectureCreate:
      type: object
      properties:
        lecture_name:
          type: string
          maxLength: 200
        teacher_name:
          type: string
          maxLength: 100
        details:
          type: array
          items:
            $ref: '#/components/schemas/LectureDetailCreate'
      required:
        - lecture_name
        - teacher_name

    LectureDetailCreate:
      type: object
      properties:
        lecture_code:
          type: string
          maxLength: 50
        syllabus_url:
          type: string
          format: uri
          nullable: true
        location:
          type: string
          maxLength: 100
          nullable: true
        faculty:
          type: string
          maxLength: 100
          nullable: true
        category:
          type: string
          maxLength: 50
          nullable: true
        grade:
          type: string
          maxLength: 20
          nullable: true
        times:
          type: array
          items:
            $ref: '#/components/schemas/LectureTimeCreate'
      required:
        - lecture_code

    LectureTimeCreate:
      type: object
      properties:
        year:
          type: integer
        term:
          type: string
          maxLength: 20
        day_of_week:
          type: string
          maxLength: 10
        time_period:
          type: string
          maxLength: 20
      required:
        - year
        - term
        - day_of_week
        - time_period

    LectureUpdate:
      type: object
      properties:
        lecture_name:
          type: string
          maxLength: 200
        teacher_name:
          type: string
          maxLength: 100

    PaginatedLectureList:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          nullable: true
          format: uri
        previous:
          type: string
          nullable: true
          format: uri
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lecture'
      required:
        - count
        - results

    # 4. Review schemas (レビュー関連)
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: レビューID
        lecture:
          $ref: '#/components/schemas/Lecture'
        user:
          $ref: '#/components/schemas/User'
        attendance_year:
          type: integer
          nullable: true
          description: 履修年度
        attendance_confirm:
          type: string
          maxLength: 50
          nullable: true
          description: 出席確認方法
        weekly_assignments:
          type: string
          maxLength: 200
          nullable: true
          description: 毎週の課題
        midterm_assignments:
          type: string
          maxLength: 200
          nullable: true
          description: 中間課題
        final_assignments:
          type: string
          maxLength: 200
          nullable: true
          description: 期末課題
        past_exam_possession:
          type: string
          maxLength: 100
          nullable: true
          description: 過去問の有無
        grades:
          type: string
          maxLength: 50
          nullable: true
          description: 成績評価方法
        credit_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: 単位取りやすさ（1-5）
        interest_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: 面白さ（1-5）
        skill_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: スキル習得度（1-5）
        comments:
          type: string
          nullable: true
          description: コメント
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    ReviewCreate:
      type: object
      properties:
        lecture_id:
          type: integer
          description: 講義ID
        attendance_year:
          type: integer
          nullable: true
        attendance_confirm:
          type: string
          maxLength: 50
          nullable: true
        weekly_assignments:
          type: string
          maxLength: 200
          nullable: true
        midterm_assignments:
          type: string
          maxLength: 200
          nullable: true
        final_assignments:
          type: string
          maxLength: 200
          nullable: true
        past_exam_possession:
          type: string
          maxLength: 100
          nullable: true
        grades:
          type: string
          maxLength: 50
          nullable: true
        credit_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
        interest_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
        skill_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
        comments:
          type: string
          nullable: true
      required:
        - lecture_id

    ReviewUpdate:
      type: object
      properties:
        attendance_year:
          type: integer
          nullable: true
        attendance_confirm:
          type: string
          maxLength: 50
          nullable: true
        weekly_assignments:
          type: string
          maxLength: 200
          nullable: true
        midterm_assignments:
          type: string
          maxLength: 200
          nullable: true
        final_assignments:
          type: string
          maxLength: 200
          nullable: true
        past_exam_possession:
          type: string
          maxLength: 100
          nullable: true
        grades:
          type: string
          maxLength: 50
          nullable: true
        credit_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
        interest_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
        skill_level:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
        comments:
          type: string
          nullable: true

    PaginatedReviewList:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          nullable: true
          format: uri
        previous:
          type: string
          nullable: true
          format: uri
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
      required:
        - count
        - results

    # 5. Contact schemas (お問い合わせ関連)
    Contact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: お問い合わせID
        name:
          type: string
          maxLength: 100
          description: 名前
        email:
          type: string
          format: email
          description: メールアドレス
        category:
          type: string
          maxLength: 50
          nullable: true
          description: お問い合わせカテゴリ
        message:
          type: string
          description: お問い合わせ内容
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: 送信日時
      required:
        - name
        - email
        - message

    ContactCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
        category:
          type: string
          maxLength: 50
          nullable: true
        message:
          type: string
      required:
        - name
        - email
        - message

    PaginatedContactList:
      type: object
      properties:
        count:
          type: integer
        next:
          type: string
          nullable: true
          format: uri
        previous:
          type: string
          nullable: true
          format: uri
        results:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
      required:
        - count
        - results

    # 6. Common schemas (共通・エラー)
    ValidationError:
      type: object
      properties:
        detail:
          type: string
          description: エラーメッセージ
        field_errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: フィールド別エラー

    SuggestionRequest:
      type: object
      properties:
        lecture_name:
          type: string
          minLength: 1
          maxLength: 100
          description: 講義名検索クエリ（オプショナル）
        teacher_name:
          type: string
          minLength: 1
          maxLength: 100
          description: 教員名検索クエリ（オプショナル）
      required: []

    SuggestionResponse:
      type: object
      properties:
        search_conditions:
          type: object
          properties:
            lecture_name:
              type: string
              nullable: true
              description: 指定された講義名検索クエリ
            teacher_name:
              type: string
              nullable: true
              description: 指定された教員名検索クエリ
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lecture'
          description: 検索結果（バックエンドで固定件数制限）
        total_count:
          type: integer
          description: 総候補数

    DetailedSearchRequest:
      type: object
      properties:
        lecture_name:
          type: string
          description: 講義名（完全一致または部分一致）
        teacher_name:
          type: string
          description: 教員名（完全一致または部分一致）
        location:
          type: string
          description: 開講場所
        faculty:
          type: string
          description: 開講学部
        category:
          type: string
          description: 開講区分
        term:
          type: string
          enum: [前期, 後期, 通年, 集中]
          description: ターム
        day_of_week:
          type: string
          enum: [月, 火, 水, 木, 金, 土, 日]
          description: 曜日
        time_period:
          type: string
          description: 時間（例：1限、2限）
        grade_year:
          type: integer
          description: 履修年次


tags:
  - name: authentication
    description: 認証・認可
  - name: users
    description: ユーザー管理
  - name: lectures
    description: 講義情報管理
  - name: reviews
    description: レビュー管理
  - name: contacts
    description: お問い合わせ
